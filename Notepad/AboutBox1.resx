<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAAlQTFRF////
        /wAAAAAAmpUCkQAAAxpJREFUeF7tk+2W6iAMRdX3f+ghJ4ePEEprhfZeZf8Yk5MAe83Sx+tmHq/HrSyB
        JbAElsASWAJLYAksgSWwBJbAElgCS2AJ/ITAM8DSM0fAvigCmwZTBOyDeP9+gS2DGQLVc3g+wLZivgAe
        F9hXXCfAtuYbBarn0AbY1swXoAEbxy8IaMLScYnABtg6I7Bz/VEB3TohsHf91wvsXi8LBwS4dUqA1QZy
        80SB/dtlY18gbv0/AvHO7u0Yxav7xK2jAvHOeK6Jjroribh1UCBdGc+14KSzAXQuf2VtnECabG4o2Hum
        9WECGMgkfiZsizGR/phA3G5cryDWQSoitsWYSD9GAGkg1UiJaTGNSDBEAKEQG6TE9tIlJDgkkLZNmUAG
        YoeYmF6aBJJNgfKWvF6WCWRC7PAZMT3WIkg6AvlcXi/LBLJA6rRQ8iAgTUIjI5DSuFl2rowgSlk1NjOu
        AiY7AmzbJUFiowI7wypgYAXyADtC0bqSuKCkWkcLGAwQcIGhmqIFDIxAHqACaMtrckVcUCJDvy6wdQK5
        Uoo+l1oRF5TI0E1t+KZArkjdW9y6YLO+gLbFPblS6t6CaT2uMivAiidTn+tcKXVvwLAe11kWsLm0rMqR
        VClHE2BbwaGd+swIsHLkM+VpqQW2FRzaaSM7LyAlYG/hzE4bURZwk0wxMpXC3sBRgIHApDpxQKA8FCtk
        AG0FRwEGApP6xJsCBBFgYOAowEBg4g7sCzSOIQIMLJyZoU+IEWgtIG8KsPG0ppsH9gQQb7/1OVagfqoZ
        jqUnwOhagfwaW4HJFLyARxcmcUBA57P4dwQ2DTiexa4Ap9PIAm0DzubRF+BkJoWAN2A+lVKgMmA4GSMQ
        4ONXPe8FLmcJLIFxAid/OyME8DLef0eA2wME9GnCbJ+4fYOArmE7fH4uoDdFGPbgJrhd4Pm5AC+KMO3A
        RfJ1Agw7cJEM/A7gk1EH7GbG/QxZ74LlRAgGCMilrA6gL+d/2AiB98D7irTXCyQD7W4QCBQGtwjo+z8s
        wPd/WKD8Dt4joAZa3iMgBqxuEsgsgSBwK6/XH+S/CxUKaW/qAAAAAElFTkSuQmCC
</value>
  </data>
</root>